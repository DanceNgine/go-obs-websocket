package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// RecordingStartingEvent : A request to start recording has been issued. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#recordingstarting
type RecordingStartingEvent _event

// Type returns the event's update type.
func (e RecordingStartingEvent) Type() string { return e.UpdateType }

// StreamTC returns the event's stream timecode.
func (e RecordingStartingEvent) StreamTC() string { return e.StreamTimecode }

// RecTC returns the event's recording timecode.
func (e RecordingStartingEvent) RecTC() string { return e.RecTimecode }

// RecordingStartedEvent : Recording started successfully. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#recordingstarted
type RecordingStartedEvent _event

// Type returns the event's update type.
func (e RecordingStartedEvent) Type() string { return e.UpdateType }

// StreamTC returns the event's stream timecode.
func (e RecordingStartedEvent) StreamTC() string { return e.StreamTimecode }

// RecTC returns the event's recording timecode.
func (e RecordingStartedEvent) RecTC() string { return e.RecTimecode }

// RecordingStoppingEvent : A request to stop recording has been issued. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#recordingstopping
type RecordingStoppingEvent _event

// Type returns the event's update type.
func (e RecordingStoppingEvent) Type() string { return e.UpdateType }

// StreamTC returns the event's stream timecode.
func (e RecordingStoppingEvent) StreamTC() string { return e.StreamTimecode }

// RecTC returns the event's recording timecode.
func (e RecordingStoppingEvent) RecTC() string { return e.RecTimecode }

// RecordingStoppedEvent : Recording stopped successfully. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#recordingstopped
type RecordingStoppedEvent _event

// Type returns the event's update type.
func (e RecordingStoppedEvent) Type() string { return e.UpdateType }

// StreamTC returns the event's stream timecode.
func (e RecordingStoppedEvent) StreamTC() string { return e.StreamTimecode }

// RecTC returns the event's recording timecode.
func (e RecordingStoppedEvent) RecTC() string { return e.RecTimecode }
