package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// GetVersionRequest : Returns the latest version of the plugin and the API.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getversion
type GetVersionRequest _request

// NewGetVersionRequest returns a new GetVersionRequest.
func NewGetVersionRequest() GetVersionRequest {
	return GetVersionRequest{MessageID: getMessageID(), RequestType: "GetVersion"}
}

// ID returns the request's message ID.
func (r GetVersionRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetVersionRequest) Type() string { return r.RequestType }

// GetVersionResponse : Response for GetVersionRequest.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getversion
type GetVersionResponse struct {
	// OBSRemote compatible API version.
	// Fixed to 1.1 for retrocompatibility.
	// Required: Yes.
	Version float64 `json:"version"`
	// obs-websocket plugin version.
	// Required: Yes.
	OBSWebsocketVersion string `json:"obs-websocket-version"`
	// OBS Studio program version.
	// Required: Yes.
	OBSStudioVersion string `json:"obs-studio-version"`
	// List of available request types, formatted as a comma-separated list string (e.g. : "Method1,Method2,Method3").
	// Required: Yes.
	AvailableRequests string `json:"available-requests"`
	_response         `json:",squash"`
}

// ID returns the response's message ID.
func (r GetVersionResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetVersionResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetVersionResponse) Err() string { return r.Error }

// GetAuthRequiredRequest : Tells the client if authentication is required
// If so, returns authentication parameters `challenge`
// and `salt` (see "Authentication" for more information).
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getauthrequired
type GetAuthRequiredRequest _request

// NewGetAuthRequiredRequest returns a new GetAuthRequiredRequest.
func NewGetAuthRequiredRequest() GetAuthRequiredRequest {
	return GetAuthRequiredRequest{MessageID: getMessageID(), RequestType: "GetAuthRequired"}
}

// ID returns the request's message ID.
func (r GetAuthRequiredRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetAuthRequiredRequest) Type() string { return r.RequestType }

// GetAuthRequiredResponse : Response for GetAuthRequiredRequest.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getauthrequired
type GetAuthRequiredResponse struct {
	// Indicates whether authentication is required.
	// Required: Yes.
	AuthRequired bool `json:"authRequired"`
	// Required: No.
	Challenge string `json:"challenge"`
	// Required: No.
	Salt      string `json:"salt"`
	_response `json:",squash"`
}

// ID returns the response's message ID.
func (r GetAuthRequiredResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetAuthRequiredResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetAuthRequiredResponse) Err() string { return r.Error }

// AuthenticateRequest : Attempt to authenticate the client to the server.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#authenticate
type AuthenticateRequest struct {
	// Response to the auth challenge (see "Authentication" for more information).
	// Required: Yes.
	Auth string `json:"auth"`
	_request
}

// NewAuthenticateRequest returns a new AuthenticateRequest.
func NewAuthenticateRequest(auth string) AuthenticateRequest {
	return AuthenticateRequest{
		auth,
		_request{
			MessageID:   getMessageID(),
			RequestType: "Authenticate",
		},
	}

}

// ID returns the request's message ID.
func (r AuthenticateRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r AuthenticateRequest) Type() string { return r.RequestType }

// AuthenticateResponse : Response for AuthenticateRequest.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#authenticate
type AuthenticateResponse _response

// ID returns the response's message ID.
func (r AuthenticateResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r AuthenticateResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r AuthenticateResponse) Err() string { return r.Error }

// SetHeartbeatRequest : Enable/disable sending of the Heartbeat event.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setheartbeat
type SetHeartbeatRequest struct {
	// Starts/Stops emitting heartbeat messages.
	// Required: Yes.
	Enable bool `json:"enable"`
	_request
}

// NewSetHeartbeatRequest returns a new SetHeartbeatRequest.
func NewSetHeartbeatRequest(enable bool) SetHeartbeatRequest {
	return SetHeartbeatRequest{
		enable,
		_request{
			MessageID:   getMessageID(),
			RequestType: "SetHeartbeat",
		},
	}

}

// ID returns the request's message ID.
func (r SetHeartbeatRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetHeartbeatRequest) Type() string { return r.RequestType }

// SetHeartbeatResponse : Response for SetHeartbeatRequest.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setheartbeat
type SetHeartbeatResponse _response

// ID returns the response's message ID.
func (r SetHeartbeatResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetHeartbeatResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetHeartbeatResponse) Err() string { return r.Error }

// SetFilenameFormattingRequest : Set the filename formatting string.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setfilenameformatting
type SetFilenameFormattingRequest struct {
	// Filename formatting string to set.
	// Required: Yes.
	FilenameFormatting string `json:"filename-formatting"`
	_request
}

// NewSetFilenameFormattingRequest returns a new SetFilenameFormattingRequest.
func NewSetFilenameFormattingRequest(filenameFormatting string) SetFilenameFormattingRequest {
	return SetFilenameFormattingRequest{
		filenameFormatting,
		_request{
			MessageID:   getMessageID(),
			RequestType: "SetFilenameFormatting",
		},
	}

}

// ID returns the request's message ID.
func (r SetFilenameFormattingRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetFilenameFormattingRequest) Type() string { return r.RequestType }

// SetFilenameFormattingResponse : Response for SetFilenameFormattingRequest.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setfilenameformatting
type SetFilenameFormattingResponse _response

// ID returns the response's message ID.
func (r SetFilenameFormattingResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetFilenameFormattingResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetFilenameFormattingResponse) Err() string { return r.Error }

// GetFilenameFormattingRequest : Get the filename formatting string.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getfilenameformatting
type GetFilenameFormattingRequest _request

// NewGetFilenameFormattingRequest returns a new GetFilenameFormattingRequest.
func NewGetFilenameFormattingRequest() GetFilenameFormattingRequest {
	return GetFilenameFormattingRequest{MessageID: getMessageID(), RequestType: "GetFilenameFormatting"}
}

// ID returns the request's message ID.
func (r GetFilenameFormattingRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetFilenameFormattingRequest) Type() string { return r.RequestType }

// GetFilenameFormattingResponse : Response for GetFilenameFormattingRequest.
// Since obs-websocket version: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getfilenameformatting
type GetFilenameFormattingResponse struct {
	// Current filename formatting string.
	// Required: Yes.
	FilenameFormatting string `json:"filename-formatting"`
	_response          `json:",squash"`
}

// ID returns the response's message ID.
func (r GetFilenameFormattingResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetFilenameFormattingResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetFilenameFormattingResponse) Err() string { return r.Error }
