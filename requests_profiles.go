package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// SetCurrentProfileRequest : Set the currently active profile.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setcurrentprofile
type SetCurrentProfileRequest struct {
	// Name of the desired profile.
	// Required: Yes.
	ProfileName string `json:"profile-name"`
	_request    `json:",squash"`
}

// NewSetCurrentProfileRequest returns a new SetCurrentProfileRequest.
func NewSetCurrentProfileRequest(profileName string) SetCurrentProfileRequest {
	return SetCurrentProfileRequest{
		profileName,
		_request{
			ID_:   getMessageID(),
			Type_: "SetCurrentProfile",
		},
	}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r SetCurrentProfileRequest) Send(c Client) (chan SetCurrentProfileResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan SetCurrentProfileResponse)
	go func() { future <- (<-generic).(SetCurrentProfileResponse) }()
	return future, nil
}

// SetCurrentProfileResponse : Response for SetCurrentProfileRequest.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setcurrentprofile
type SetCurrentProfileResponse struct {
	_response `json:",squash"`
}

// GetCurrentProfileRequest : Get the name of the current profile.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getcurrentprofile
type GetCurrentProfileRequest struct{ _request }

// NewGetCurrentProfileRequest returns a new GetCurrentProfileRequest.
func NewGetCurrentProfileRequest() GetCurrentProfileRequest {
	return GetCurrentProfileRequest{_request{
		ID_:   getMessageID(),
		Type_: "GetCurrentProfile",
	}}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r GetCurrentProfileRequest) Send(c Client) (chan GetCurrentProfileResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan GetCurrentProfileResponse)
	go func() { future <- (<-generic).(GetCurrentProfileResponse) }()
	return future, nil
}

// GetCurrentProfileResponse : Response for GetCurrentProfileRequest.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getcurrentprofile
type GetCurrentProfileResponse struct {
	// Name of the currently active profile.
	// Required: Yes.
	ProfileName string `json:"profile-name"`
	_response   `json:",squash"`
}

// ListProfilesRequest : Get a list of available profiles.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#listprofiles
type ListProfilesRequest struct{ _request }

// NewListProfilesRequest returns a new ListProfilesRequest.
func NewListProfilesRequest() ListProfilesRequest {
	return ListProfilesRequest{_request{
		ID_:   getMessageID(),
		Type_: "ListProfiles",
	}}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r ListProfilesRequest) Send(c Client) (chan ListProfilesResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan ListProfilesResponse)
	go func() { future <- (<-generic).(ListProfilesResponse) }()
	return future, nil
}

// ListProfilesResponse : Response for ListProfilesRequest.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#listprofiles
type ListProfilesResponse struct {
	// List of available profiles.
	// Required: Yes.
	Profiles  interface{} `json:"profiles"`
	_response `json:",squash"`
}
