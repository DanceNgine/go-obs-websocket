package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// GetSourcesListRequest : List all sources available in the running OBS instance. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourceslist
type GetSourcesListRequest _request

// ID returns the request's message ID.
func (r GetSourcesListRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetSourcesListRequest) Type() string { return r.RequestType }

// GetSourcesListResponse : Response for GetSourcesListRequest. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourceslist
type GetSourcesListResponse struct {
	Sources       []map[string]interface{} `json:"sources"`          // Array of sources as objects.
	SourcesName   string                   `json:"sources.*.name"`   // Unique source name.
	SourcesTypeID string                   `json:"sources.*.typeId"` // Non-unique source internal type (a.k.a type id).
	SourcesType   string                   `json:"sources.*.type"`   // Source type. Value is one of the following: "input", "filter", "transition", "scene" or "unknown".
	_response
}

// ID returns the response's message ID.
func (r GetSourcesListResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetSourcesListResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetSourcesListResponse) Err() string { return r.Error }

// GetSourcesTypesListRequest : Get a list of all available sources types. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourcestypeslist
type GetSourcesTypesListRequest _request

// ID returns the request's message ID.
func (r GetSourcesTypesListRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetSourcesTypesListRequest) Type() string { return r.RequestType }

// GetSourcesTypesListResponse : Response for GetSourcesTypesListRequest. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourcestypeslist
type GetSourcesTypesListResponse struct {
	IDs                     []map[string]interface{} `json:"ids"`                         // Array of sources as objects.
	IDsTypeID               string                   `json:"ids.*.typeId"`                // Non-unique internal source type ID.
	IDsDisplayName          string                   `json:"ids.*.displayName"`           // Display name of the source type.
	IDsType                 string                   `json:"ids.*.type"`                  // Type. Value is one of the following: "input", "filter", "transition" or "other".
	IDsDefaultSettings      map[string]interface{}   `json:"ids.*.defaultSettings"`       // Default settings of this source type.
	IDsCaps                 map[string]interface{}   `json:"ids.*.caps"`                  // Source type capabilities.
	IDsCapsIsAsync          bool                     `json:"ids.*.caps.isAsync"`          // True if source of this type provide frames asynchronously.
	IDsCapsHasVideo         bool                     `json:"ids.*.caps.hasVideo"`         // True if sources of this type provide video.
	IDsCapsHasAudio         bool                     `json:"ids.*.caps.hasAudio"`         // True if sources of this type provide audio.
	IDsCapsCanInteract      bool                     `json:"ids.*.caps.canInteract"`      // True if interaction with this sources of this type is possible.
	IDsCapsIsComposite      bool                     `json:"ids.*.caps.isComposite"`      // True if sources of this type composite one or more sub-sources.
	IDsCapsDoNotDuplicate   bool                     `json:"ids.*.caps.doNotDuplicate"`   // True if sources of this type should not be fully duplicated.
	IDsCapsDoNotSelfMonitor bool                     `json:"ids.*.caps.doNotSelfMonitor"` // True if sources of this type may cause a feedback loop if it's audio is monitored and shouldn't be.
	_response
}

// ID returns the response's message ID.
func (r GetSourcesTypesListResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetSourcesTypesListResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetSourcesTypesListResponse) Err() string { return r.Error }

// GetVolumeRequest : Get the volume of the specified source. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getvolume
type GetVolumeRequest struct {
	Source string `json:"source"` // Name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetVolumeRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetVolumeRequest) Type() string { return r.RequestType }

// GetVolumeResponse : Response for GetVolumeRequest. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getvolume
type GetVolumeResponse struct {
	Name   string  `json:"name"`   // Name of the source.
	Volume float64 `json:"volume"` // Volume of the source. Between `0.0` and `1.0`.
	Mute   bool    `json:"mute"`   // Indicates whether the source is muted.
	_response
}

// ID returns the response's message ID.
func (r GetVolumeResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetVolumeResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetVolumeResponse) Err() string { return r.Error }

// SetVolumeRequest : Set the volume of the specified source. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setvolume
type SetVolumeRequest struct {
	Source string  `json:"source"` // Name of the source.
	Volume float64 `json:"volume"` // Desired volume. Must be between `0.0` and `1.0`.
	_request
}

// ID returns the request's message ID.
func (r SetVolumeRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetVolumeRequest) Type() string { return r.RequestType }

// SetVolumeResponse : Response for SetVolumeRequest. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setvolume
type SetVolumeResponse _response

// ID returns the response's message ID.
func (r SetVolumeResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetVolumeResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetVolumeResponse) Err() string { return r.Error }

// GetMuteRequest : Get the mute status of a specified source. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getmute
type GetMuteRequest struct {
	Source string `json:"source"` // The name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetMuteRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetMuteRequest) Type() string { return r.RequestType }

// GetMuteResponse : Response for GetMuteRequest. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getmute
type GetMuteResponse struct {
	Name  string `json:"name"`  // The name of the source.
	Muted bool   `json:"muted"` // Mute status of the source.
	_response
}

// ID returns the response's message ID.
func (r GetMuteResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetMuteResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetMuteResponse) Err() string { return r.Error }

// SetMuteRequest : Sets the mute status of a specified source. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setmute
type SetMuteRequest struct {
	Source string `json:"source"` // The name of the source.
	Mute   bool   `json:"mute"`   // Desired mute status.
	_request
}

// ID returns the request's message ID.
func (r SetMuteRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetMuteRequest) Type() string { return r.RequestType }

// SetMuteResponse : Response for SetMuteRequest. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setmute
type SetMuteResponse _response

// ID returns the response's message ID.
func (r SetMuteResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetMuteResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetMuteResponse) Err() string { return r.Error }

// ToggleMuteRequest : Inverts the mute status of a specified source. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#togglemute
type ToggleMuteRequest struct {
	Source string `json:"source"` // The name of the source.
	_request
}

// ID returns the request's message ID.
func (r ToggleMuteRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r ToggleMuteRequest) Type() string { return r.RequestType }

// ToggleMuteResponse : Response for ToggleMuteRequest. Since: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#togglemute
type ToggleMuteResponse _response

// ID returns the response's message ID.
func (r ToggleMuteResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r ToggleMuteResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r ToggleMuteResponse) Err() string { return r.Error }

// SetSyncOffsetRequest : Set the audio sync offset of a specified source. Since: 4.2.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setsyncoffset
type SetSyncOffsetRequest struct {
	Source string `json:"source"` // The name of the source.
	Offset int    `json:"offset"` // The desired audio sync offset (in nanoseconds).
	_request
}

// ID returns the request's message ID.
func (r SetSyncOffsetRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetSyncOffsetRequest) Type() string { return r.RequestType }

// SetSyncOffsetResponse : Response for SetSyncOffsetRequest. Since: 4.2.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setsyncoffset
type SetSyncOffsetResponse _response

// ID returns the response's message ID.
func (r SetSyncOffsetResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetSyncOffsetResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetSyncOffsetResponse) Err() string { return r.Error }

// GetSyncOffsetRequest : Get the audio sync offset of a specified source. Since: 4.2.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsyncoffset
type GetSyncOffsetRequest struct {
	Source string `json:"source"` // The name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetSyncOffsetRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetSyncOffsetRequest) Type() string { return r.RequestType }

// GetSyncOffsetResponse : Response for GetSyncOffsetRequest. Since: 4.2.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsyncoffset
type GetSyncOffsetResponse struct {
	Name   string `json:"name"`   // The name of the source.
	Offset int    `json:"offset"` // The audio sync offset (in nanoseconds).
	_response
}

// ID returns the response's message ID.
func (r GetSyncOffsetResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetSyncOffsetResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetSyncOffsetResponse) Err() string { return r.Error }

// GetSourceSettingsRequest : Get settings of the specified source. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourcesettings
type GetSourceSettingsRequest struct {
	SourceName string `json:"sourceName"` // Name of the source item.
	SourceType string `json:"sourceType"` // Type of the specified source. Useful for type-checking if you expect a specific settings schema. Optional.
	_request
}

// ID returns the request's message ID.
func (r GetSourceSettingsRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetSourceSettingsRequest) Type() string { return r.RequestType }

// GetSourceSettingsResponse : Response for GetSourceSettingsRequest. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getsourcesettings
type GetSourceSettingsResponse struct {
	SourceName     string                 `json:"sourceName"`     // Source name.
	SourceType     string                 `json:"sourceType"`     // Type of the specified source.
	SourceSettings map[string]interface{} `json:"sourceSettings"` // Source settings. Varying between source types.
	_response
}

// ID returns the response's message ID.
func (r GetSourceSettingsResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetSourceSettingsResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetSourceSettingsResponse) Err() string { return r.Error }

// SetSourceSettingsRequest : Set settings of the specified source. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setsourcesettings
type SetSourceSettingsRequest struct {
	SourceName     string                 `json:"sourceName"`     // Name of the source item.
	SourceType     string                 `json:"sourceType"`     // Type of the specified source. Useful for type-checking to avoid settings a set of settings incompatible with the actual source's type. Optional.
	SourceSettings map[string]interface{} `json:"sourceSettings"` // Source settings. Varying between source types.
	_request
}

// ID returns the request's message ID.
func (r SetSourceSettingsRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetSourceSettingsRequest) Type() string { return r.RequestType }

// SetSourceSettingsResponse : Response for SetSourceSettingsRequest. Since: 4.3.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setsourcesettings
type SetSourceSettingsResponse struct {
	SourceName     string                 `json:"sourceName"`     // Source name.
	SourceType     string                 `json:"sourceType"`     // Type of the specified source.
	SourceSettings map[string]interface{} `json:"sourceSettings"` // Source settings. Varying between source types.
	_response
}

// ID returns the response's message ID.
func (r SetSourceSettingsResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetSourceSettingsResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetSourceSettingsResponse) Err() string { return r.Error }

// GetTextGDIPlusPropertiesRequest : Get the current properties of a Text GDI Plus source. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettextgdiplusproperties
type GetTextGDIPlusPropertiesRequest struct {
	SceneName string `json:"scene-name"` // Name of the scene to retrieve. Defaults to the current scene. Optional.
	Source    string `json:"source"`     // Name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetTextGDIPlusPropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetTextGDIPlusPropertiesRequest) Type() string { return r.RequestType }

// GetTextGDIPlusPropertiesResponse : Response for GetTextGDIPlusPropertiesRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettextgdiplusproperties
type GetTextGDIPlusPropertiesResponse struct {
	Align           string                 `json:"align"`            // Text Alignment ("left", "center", "right").
	BkColor         int                    `json:"bk-color"`         // Background color.
	BkOpacity       int                    `json:"bk-opacity"`       // Background opacity (0-100).
	Chatlog         bool                   `json:"chatlog"`          // Chat log.
	ChatlogLines    int                    `json:"chatlog_lines"`    // Chat log lines.
	Color           int                    `json:"color"`            // Text color.
	Extents         bool                   `json:"extents"`          // Extents wrap.
	ExtentsCx       int                    `json:"extents_cx"`       // Extents cx.
	ExtentsCy       int                    `json:"extents_cy"`       // Extents cy.
	File            string                 `json:"file"`             // File path name.
	ReadFromFile    bool                   `json:"read_from_file"`   // Read text from the specified file.
	Font            map[string]interface{} `json:"font"`             // Holds data for the font. Ex: `"font": { "face": "Arial", "flags": 0, "size": 150, "style": "" }`.
	FontFace        string                 `json:"font.face"`        // Font face.
	FontFlags       int                    `json:"font.flags"`       // Font text styling flag. `Bold=1, Italic=2, Bold Italic=3, Underline=5, Strikeout=8`.
	FontSize        int                    `json:"font.size"`        // Font text size.
	FontStyle       string                 `json:"font.style"`       // Font Style (unknown function).
	Gradient        bool                   `json:"gradient"`         // Gradient enabled.
	GradientColor   int                    `json:"gradient_color"`   // Gradient color.
	GradientDir     float64                `json:"gradient_dir"`     // Gradient direction.
	GradientOpacity int                    `json:"gradient_opacity"` // Gradient opacity (0-100).
	Outline         bool                   `json:"outline"`          // Outline.
	OutlineColor    int                    `json:"outline_color"`    // Outline color.
	OutlineSize     int                    `json:"outline_size"`     // Outline size.
	OutlineOpacity  int                    `json:"outline_opacity"`  // Outline opacity (0-100).
	Text            string                 `json:"text"`             // Text content to be displayed.
	Valign          string                 `json:"valign"`           // Text vertical alignment ("top", "center", "bottom").
	Vertical        bool                   `json:"vertical"`         // Vertical text enabled.
	Render          bool                   `json:"render"`           // Visibility of the scene item.
	_response
}

// ID returns the response's message ID.
func (r GetTextGDIPlusPropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetTextGDIPlusPropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetTextGDIPlusPropertiesResponse) Err() string { return r.Error }

// SetTextGDIPlusPropertiesRequest : Set the current properties of a Text GDI Plus source. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settextgdiplusproperties
type SetTextGDIPlusPropertiesRequest struct {
	SceneName       string                 `json:"scene-name"`       // Name of the scene to retrieve. Defaults to the current scene. Optional.
	Source          string                 `json:"source"`           // Name of the source.
	Align           string                 `json:"align"`            // Text Alignment ("left", "center", "right"). Optional.
	BkColor         int                    `json:"bk-color"`         // Background color. Optional.
	BkOpacity       int                    `json:"bk-opacity"`       // Background opacity (0-100). Optional.
	Chatlog         bool                   `json:"chatlog"`          // Chat log. Optional.
	ChatlogLines    int                    `json:"chatlog_lines"`    // Chat log lines. Optional.
	Color           int                    `json:"color"`            // Text color. Optional.
	Extents         bool                   `json:"extents"`          // Extents wrap. Optional.
	ExtentsCx       int                    `json:"extents_cx"`       // Extents cx. Optional.
	ExtentsCy       int                    `json:"extents_cy"`       // Extents cy. Optional.
	File            string                 `json:"file"`             // File path name. Optional.
	ReadFromFile    bool                   `json:"read_from_file"`   // Read text from the specified file. Optional.
	Font            map[string]interface{} `json:"font"`             // Holds data for the font. Ex: `"font": { "face": "Arial", "flags": 0, "size": 150, "style": "" }`. Optional.
	FontFace        string                 `json:"font.face"`        // Font face. Optional.
	FontFlags       int                    `json:"font.flags"`       // Font text styling flag. `Bold=1, Italic=2, Bold Italic=3, Underline=5, Strikeout=8`. Optional.
	FontSize        int                    `json:"font.size"`        // Font text size. Optional.
	FontStyle       string                 `json:"font.style"`       // Font Style (unknown function). Optional.
	Gradient        bool                   `json:"gradient"`         // Gradient enabled. Optional.
	GradientColor   int                    `json:"gradient_color"`   // Gradient color. Optional.
	GradientDir     float64                `json:"gradient_dir"`     // Gradient direction. Optional.
	GradientOpacity int                    `json:"gradient_opacity"` // Gradient opacity (0-100). Optional.
	Outline         bool                   `json:"outline"`          // Outline. Optional.
	OutlineColor    int                    `json:"outline_color"`    // Outline color. Optional.
	OutlineSize     int                    `json:"outline_size"`     // Outline size. Optional.
	OutlineOpacity  int                    `json:"outline_opacity"`  // Outline opacity (0-100). Optional.
	Text            string                 `json:"text"`             // Text content to be displayed. Optional.
	Valign          string                 `json:"valign"`           // Text vertical alignment ("top", "center", "bottom"). Optional.
	Vertical        bool                   `json:"vertical"`         // Vertical text enabled. Optional.
	Render          bool                   `json:"render"`           // Visibility of the scene item. Optional.
	_request
}

// ID returns the request's message ID.
func (r SetTextGDIPlusPropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetTextGDIPlusPropertiesRequest) Type() string { return r.RequestType }

// SetTextGDIPlusPropertiesResponse : Response for SetTextGDIPlusPropertiesRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settextgdiplusproperties
type SetTextGDIPlusPropertiesResponse _response

// ID returns the response's message ID.
func (r SetTextGDIPlusPropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetTextGDIPlusPropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetTextGDIPlusPropertiesResponse) Err() string { return r.Error }

// GetTextFreetype2PropertiesRequest : Get the current properties of a Text Freetype 2 source. Since: 4.x.x.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettextfreetype2properties
type GetTextFreetype2PropertiesRequest struct {
	SceneName string `json:"scene-name"` // Name of the scene to retrieve. Defaults to the current scene. Optional.
	Source    string `json:"source"`     // Name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetTextFreetype2PropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetTextFreetype2PropertiesRequest) Type() string { return r.RequestType }

// GetTextFreetype2PropertiesResponse : Response for GetTextFreetype2PropertiesRequest. Since: 4.x.x.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettextfreetype2properties
type GetTextFreetype2PropertiesResponse struct {
	Color1      int                    `json:"color1"`       // Gradient top color.
	Color2      int                    `json:"color2"`       // Gradient bottom color.
	CustomWidth int                    `json:"custom_width"` // Custom width (0 to disable).
	DropShadow  bool                   `json:"drop_shadow"`  // Drop shadow.
	Font        map[string]interface{} `json:"font"`         // Holds data for the font. Ex: `"font": { "face": "Arial", "flags": 0, "size": 150, "style": "" }`.
	FontFace    string                 `json:"font.face"`    // Font face.
	FontFlags   int                    `json:"font.flags"`   // Font text styling flag. `Bold=1, Italic=2, Bold Italic=3, Underline=5, Strikeout=8`.
	FontSize    int                    `json:"font.size"`    // Font text size.
	FontStyle   string                 `json:"font.style"`   // Font Style (unknown function).
	FromFile    bool                   `json:"from_file"`    // Read text from the specified file.
	LogMode     bool                   `json:"log_mode"`     // Chat log.
	Outline     bool                   `json:"outline"`      // Outline.
	Text        string                 `json:"text"`         // Text content to be displayed.
	TextFile    string                 `json:"text_file"`    // File path.
	WordWrap    bool                   `json:"word_wrap"`    // Word wrap.
	Render      bool                   `json:"render"`       // Visibility of the scene item.
	_response
}

// ID returns the response's message ID.
func (r GetTextFreetype2PropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetTextFreetype2PropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetTextFreetype2PropertiesResponse) Err() string { return r.Error }

// SetTextFreetype2PropertiesRequest : Set the current properties of a Text Freetype 2 source. Since: 4.x.x.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settextfreetype2properties
type SetTextFreetype2PropertiesRequest struct {
	SceneName   string                 `json:"scene-name"`   // Name of the scene to retrieve. Defaults to the current scene. Optional.
	Source      string                 `json:"source"`       // Name of the source.
	Color1      int                    `json:"color1"`       // Gradient top color. Optional.
	Color2      int                    `json:"color2"`       // Gradient bottom color. Optional.
	CustomWidth int                    `json:"custom_width"` // Custom width (0 to disable). Optional.
	DropShadow  bool                   `json:"drop_shadow"`  // Drop shadow. Optional.
	Font        map[string]interface{} `json:"font"`         // Holds data for the font. Ex: `"font": { "face": "Arial", "flags": 0, "size": 150, "style": "" }`. Optional.
	FontFace    string                 `json:"font.face"`    // Font face. Optional.
	FontFlags   int                    `json:"font.flags"`   // Font text styling flag. `Bold=1, Italic=2, Bold Italic=3, Underline=5, Strikeout=8`. Optional.
	FontSize    int                    `json:"font.size"`    // Font text size. Optional.
	FontStyle   string                 `json:"font.style"`   // Font Style (unknown function). Optional.
	FromFile    bool                   `json:"from_file"`    // Read text from the specified file. Optional.
	LogMode     bool                   `json:"log_mode"`     // Chat log. Optional.
	Outline     bool                   `json:"outline"`      // Outline. Optional.
	Text        string                 `json:"text"`         // Text content to be displayed. Optional.
	TextFile    string                 `json:"text_file"`    // File path. Optional.
	WordWrap    bool                   `json:"word_wrap"`    // Word wrap. Optional.
	Render      bool                   `json:"render"`       // Visibility of the scene item. Optional.
	_request
}

// ID returns the request's message ID.
func (r SetTextFreetype2PropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetTextFreetype2PropertiesRequest) Type() string { return r.RequestType }

// SetTextFreetype2PropertiesResponse : Response for SetTextFreetype2PropertiesRequest. Since: 4.x.x.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settextfreetype2properties
type SetTextFreetype2PropertiesResponse _response

// ID returns the response's message ID.
func (r SetTextFreetype2PropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetTextFreetype2PropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetTextFreetype2PropertiesResponse) Err() string { return r.Error }

// GetBrowserSourcePropertiesRequest : Get current properties for a Browser Source. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getbrowsersourceproperties
type GetBrowserSourcePropertiesRequest struct {
	SceneName string `json:"scene-name"` // Name of the scene that the source belongs to. Defaults to the current scene. Optional.
	Source    string `json:"source"`     // Name of the source.
	_request
}

// ID returns the request's message ID.
func (r GetBrowserSourcePropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetBrowserSourcePropertiesRequest) Type() string { return r.RequestType }

// GetBrowserSourcePropertiesResponse : Response for GetBrowserSourcePropertiesRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getbrowsersourceproperties
type GetBrowserSourcePropertiesResponse struct {
	IsLocalFile bool   `json:"is_local_file"` // Indicates that a local file is in use.
	LocalFile   string `json:"local_file"`    // file path.
	Url         string `json:"url"`           // Url.
	Css         string `json:"css"`           // CSS to inject.
	Width       int    `json:"width"`         // Width.
	Height      int    `json:"height"`        // Height.
	Fps         int    `json:"fps"`           // Framerate.
	Shutdown    bool   `json:"shutdown"`      // Indicates whether the source should be shutdown when not visible.
	Render      bool   `json:"render"`        // Visibility of the scene item. Optional.
	_response
}

// ID returns the response's message ID.
func (r GetBrowserSourcePropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetBrowserSourcePropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetBrowserSourcePropertiesResponse) Err() string { return r.Error }

// SetBrowserSourcePropertiesRequest : Set current properties for a Browser Source. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setbrowsersourceproperties
type SetBrowserSourcePropertiesRequest struct {
	SceneName   string `json:"scene-name"`    // Name of the scene that the source belongs to. Defaults to the current scene. Optional.
	Source      string `json:"source"`        // Name of the source.
	IsLocalFile bool   `json:"is_local_file"` // Indicates that a local file is in use. Optional.
	LocalFile   string `json:"local_file"`    // file path. Optional.
	Url         string `json:"url"`           // Url. Optional.
	Css         string `json:"css"`           // CSS to inject. Optional.
	Width       int    `json:"width"`         // Width. Optional.
	Height      int    `json:"height"`        // Height. Optional.
	Fps         int    `json:"fps"`           // Framerate. Optional.
	Shutdown    bool   `json:"shutdown"`      // Indicates whether the source should be shutdown when not visible. Optional.
	Render      bool   `json:"render"`        // Visibility of the scene item. Optional.
	_request
}

// ID returns the request's message ID.
func (r SetBrowserSourcePropertiesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetBrowserSourcePropertiesRequest) Type() string { return r.RequestType }

// SetBrowserSourcePropertiesResponse : Response for SetBrowserSourcePropertiesRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setbrowsersourceproperties
type SetBrowserSourcePropertiesResponse _response

// ID returns the response's message ID.
func (r SetBrowserSourcePropertiesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetBrowserSourcePropertiesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetBrowserSourcePropertiesResponse) Err() string { return r.Error }

// DeleteSceneItemRequest : Deletes a scene item. Since: Unreleased.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#deletesceneitem
type DeleteSceneItemRequest struct {
	Scene    string                 `json:"scene"`     // Name of the scene the source belogns to. Defaults to the current scene. Optional.
	Item     map[string]interface{} `json:"item"`      // item to delete (required).
	ItemName string                 `json:"item.name"` // name of the scene item (prefer `id`, including both is acceptable).
	ItemID   int                    `json:"item.id"`   // id of the scene item.
	_request
}

// ID returns the request's message ID.
func (r DeleteSceneItemRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r DeleteSceneItemRequest) Type() string { return r.RequestType }

// DeleteSceneItemResponse : Response for DeleteSceneItemRequest. Since: Unreleased.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#deletesceneitem
type DeleteSceneItemResponse _response

// ID returns the response's message ID.
func (r DeleteSceneItemResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r DeleteSceneItemResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r DeleteSceneItemResponse) Err() string { return r.Error }

// DuplicateSceneItemRequest : Duplicates a scene item. Since: Unreleased.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#duplicatesceneitem
type DuplicateSceneItemRequest struct {
	FromScene string                 `json:"fromScene"` // Name of the scene to copy the item from. Defaults to the current scene. Optional.
	ToScene   string                 `json:"toScene"`   // Name of the scene to create the item in. Defaults to the current scene. Optional.
	Item      map[string]interface{} `json:"item"`      // item to delete (required).
	ItemName  string                 `json:"item.name"` // name of the scene item (prefer `id`, including both is acceptable).
	ItemID    int                    `json:"item.id"`   // id of the scene item.
	_request
}

// ID returns the request's message ID.
func (r DuplicateSceneItemRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r DuplicateSceneItemRequest) Type() string { return r.RequestType }

// DuplicateSceneItemResponse : Response for DuplicateSceneItemRequest. Since: Unreleased.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#duplicatesceneitem
type DuplicateSceneItemResponse _response

// ID returns the response's message ID.
func (r DuplicateSceneItemResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r DuplicateSceneItemResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r DuplicateSceneItemResponse) Err() string { return r.Error }

// GetSpecialSourcesRequest : Get configured special sources like Desktop Audio and Mic/Aux sources. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getspecialsources
type GetSpecialSourcesRequest _request

// ID returns the request's message ID.
func (r GetSpecialSourcesRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetSpecialSourcesRequest) Type() string { return r.RequestType }

// GetSpecialSourcesResponse : Response for GetSpecialSourcesRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getspecialsources
type GetSpecialSourcesResponse struct {
	Desktop1 string `json:"desktop-1"` // Name of the first Desktop Audio capture source. Optional.
	Desktop2 string `json:"desktop-2"` // Name of the second Desktop Audio capture source. Optional.
	Mic1     string `json:"mic-1"`     // Name of the first Mic/Aux input source. Optional.
	Mic2     string `json:"mic-2"`     // Name of the second Mic/Aux input source. Optional.
	Mic3     string `json:"mic-3"`     // Name of the third Mic/Aux input source. Optional.
	_response
}

// ID returns the response's message ID.
func (r GetSpecialSourcesResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetSpecialSourcesResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetSpecialSourcesResponse) Err() string { return r.Error }
