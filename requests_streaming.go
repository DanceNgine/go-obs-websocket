package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// GetStreamingStatusRequest : Get current streaming and recording status. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getstreamingstatus
type GetStreamingStatusRequest _request

// ID returns the request's message ID.
func (r GetStreamingStatusRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetStreamingStatusRequest) Type() string { return r.RequestType }

// GetStreamingStatusResponse : Response for GetStreamingStatusRequest. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getstreamingstatus
type GetStreamingStatusResponse struct {
	Streaming      bool   `json:"streaming"`       // Current streaming status.
	Recording      bool   `json:"recording"`       // Current recording status.
	StreamTimecode string `json:"stream-timecode"` // Time elapsed since streaming started (only present if currently streaming). Optional.
	RecTimecode    string `json:"rec-timecode"`    // Time elapsed since recording started (only present if currently recording). Optional.
	PreviewOnly    bool   `json:"preview-only"`    // Always false. Retrocompatibility with OBSRemote.
	_response
}

// ID returns the response's message ID.
func (r GetStreamingStatusResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetStreamingStatusResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetStreamingStatusResponse) Err() string { return r.Error }

// StartStopStreamingRequest : Toggle streaming on or off. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#startstopstreaming
type StartStopStreamingRequest _request

// ID returns the request's message ID.
func (r StartStopStreamingRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r StartStopStreamingRequest) Type() string { return r.RequestType }

// StartStopStreamingResponse : Response for StartStopStreamingRequest. Since: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#startstopstreaming
type StartStopStreamingResponse _response

// ID returns the response's message ID.
func (r StartStopStreamingResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r StartStopStreamingResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r StartStopStreamingResponse) Err() string { return r.Error }

// StartStreamingRequest : Start streaming. Will return an `error` if streaming is already active. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#startstreaming
type StartStreamingRequest struct {
	Stream                 map[string]interface{} `json:"stream"`                   // Special stream configuration. Please note: these won't be saved to OBS' configuration. Optional.
	StreamType             string                 `json:"stream.type"`              // If specified ensures the type of stream matches the given type (usually 'rtmp_custom' or 'rtmp_common'). If the currently configured stream type does not match the given stream type, all settings must be specified in the `settings` object or an error will occur when starting the stream. Optional.
	StreamMetadata         map[string]interface{} `json:"stream.metadata"`          // Adds the given object parameters as encoded query string parameters to the 'key' of the RTMP stream. Used to pass data to the RTMP service about the streaming. May be any String, Numeric, or Boolean field. Optional.
	StreamSettings         map[string]interface{} `json:"stream.settings"`          // Settings for the stream. Optional.
	StreamSettingsServer   string                 `json:"stream.settings.server"`   // The publish URL. Optional.
	StreamSettingsKey      string                 `json:"stream.settings.key"`      // The publish key of the stream. Optional.
	StreamSettingsUseAuth  bool                   `json:"stream.settings.use-auth"` // Indicates whether authentication should be used when connecting to the streaming server. Optional.
	StreamSettingsUsername string                 `json:"stream.settings.username"` // If authentication is enabled, the username for the streaming server. Ignored if `use-auth` is not set to `true`. Optional.
	StreamSettingsPassword string                 `json:"stream.settings.password"` // If authentication is enabled, the password for the streaming server. Ignored if `use-auth` is not set to `true`. Optional.
	_request
}

// ID returns the request's message ID.
func (r StartStreamingRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r StartStreamingRequest) Type() string { return r.RequestType }

// StartStreamingResponse : Response for StartStreamingRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#startstreaming
type StartStreamingResponse _response

// ID returns the response's message ID.
func (r StartStreamingResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r StartStreamingResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r StartStreamingResponse) Err() string { return r.Error }

// StopStreamingRequest : Stop streaming. Will return an `error` if streaming is not active. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#stopstreaming
type StopStreamingRequest _request

// ID returns the request's message ID.
func (r StopStreamingRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r StopStreamingRequest) Type() string { return r.RequestType }

// StopStreamingResponse : Response for StopStreamingRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#stopstreaming
type StopStreamingResponse _response

// ID returns the response's message ID.
func (r StopStreamingResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r StopStreamingResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r StopStreamingResponse) Err() string { return r.Error }

// SetStreamSettingsRequest : Sets one or more attributes of the current streaming server settings. Any options not passed will remain unchanged. Returns the updated settings in response. If 'type' is different than the current streaming service type, all settings are required. Returns the full settings of the stream (the same as GetStreamSettings). Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setstreamsettings
type SetStreamSettingsRequest struct {
	Type             string                 `json:"type"`              // The type of streaming service configuration, usually `rtmp_custom` or `rtmp_common`. TODO: Reserved name.
	Settings         map[string]interface{} `json:"settings"`          // The actual settings of the stream.
	SettingsServer   string                 `json:"settings.server"`   // The publish URL. Optional.
	SettingsKey      string                 `json:"settings.key"`      // The publish key. Optional.
	SettingsUseAuth  bool                   `json:"settings.use-auth"` // Indicates whether authentication should be used when connecting to the streaming server. Optional.
	SettingsUsername string                 `json:"settings.username"` // The username for the streaming service. Optional.
	SettingsPassword string                 `json:"settings.password"` // The password for the streaming service. Optional.
	Save             bool                   `json:"save"`              // Persist the settings to disk.
	_request
}

// ID returns the request's message ID.
func (r SetStreamSettingsRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SetStreamSettingsRequest) Type() string { return r.RequestType }

// SetStreamSettingsResponse : Response for SetStreamSettingsRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setstreamsettings
type SetStreamSettingsResponse _response

// ID returns the response's message ID.
func (r SetStreamSettingsResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SetStreamSettingsResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SetStreamSettingsResponse) Err() string { return r.Error }

// GetStreamSettingsRequest : Get the current streaming server settings. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getstreamsettings
type GetStreamSettingsRequest _request

// ID returns the request's message ID.
func (r GetStreamSettingsRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r GetStreamSettingsRequest) Type() string { return r.RequestType }

// GetStreamSettingsResponse : Response for GetStreamSettingsRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getstreamsettings
type GetStreamSettingsResponse struct {
	Type             string                 `json:"type"`              // The type of streaming service configuration. Possible values: 'rtmp_custom' or 'rtmp_common'.
	Settings         map[string]interface{} `json:"settings"`          // Stream settings object.
	SettingsServer   string                 `json:"settings.server"`   // The publish URL.
	SettingsKey      string                 `json:"settings.key"`      // The publish key of the stream.
	SettingsUseAuth  bool                   `json:"settings.use-auth"` // Indicates whether audentication should be used when connecting to the streaming server.
	SettingsUsername string                 `json:"settings.username"` // The username to use when accessing the streaming server. Only present if `use-auth` is `true`.
	SettingsPassword string                 `json:"settings.password"` // The password to use when accessing the streaming server. Only present if `use-auth` is `true`.
	_response
}

// ID returns the response's message ID.
func (r GetStreamSettingsResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r GetStreamSettingsResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r GetStreamSettingsResponse) Err() string { return r.Error }

// SaveStreamSettingsRequest : Save the current streaming server settings to disk. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#savestreamsettings
type SaveStreamSettingsRequest _request

// ID returns the request's message ID.
func (r SaveStreamSettingsRequest) ID() string { return r.MessageID }

// Type returns the request's message type.
func (r SaveStreamSettingsRequest) Type() string { return r.RequestType }

// SaveStreamSettingsResponse : Response for SaveStreamSettingsRequest. Since: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#savestreamsettings
type SaveStreamSettingsResponse _response

// ID returns the response's message ID.
func (r SaveStreamSettingsResponse) ID() string { return r.MessageID }

// Stat returns the response's status.
func (r SaveStreamSettingsResponse) Stat() string { return r.Status }

// Err returns the response's error.
func (r SaveStreamSettingsResponse) Err() string { return r.Error }
