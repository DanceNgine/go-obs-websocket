package obsws

// This file is automatically generated.
// https://github.com/christopher-dG/go-obs-websocket/blob/master/codegen/protocol.py

// GetTransitionListRequest : List of all transitions available in the frontend's dropdown menu.
// Since obs-websocket version: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettransitionlist
type GetTransitionListRequest struct{ _request }

// NewGetTransitionListRequest returns a new GetTransitionListRequest.
func NewGetTransitionListRequest() GetTransitionListRequest {
	return GetTransitionListRequest{_request{
		ID_:   getMessageID(),
		Type_: "GetTransitionList",
	}}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r GetTransitionListRequest) Send(c Client) (chan GetTransitionListResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan GetTransitionListResponse)
	go func() { future <- (<-generic).(GetTransitionListResponse) }()
	return future, nil
}

// GetTransitionListResponse : Response for GetTransitionListRequest.
// Since obs-websocket version: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettransitionlist
type GetTransitionListResponse struct {
	// Name of the currently active transition.
	// Required: Yes.
	CurrentTransition string `json:"current-transition"`
	// List of transitions.
	// Required: Yes.
	Transitions interface{} `json:"transitions"`
	// Name of the transition.
	// Required: Yes.
	TransitionsName string `json:"transitions[].name"`
	_response       `json:",squash"`
}

// GetCurrentTransitionRequest : Get the name of the currently selected transition in the frontend's dropdown menu.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getcurrenttransition
type GetCurrentTransitionRequest struct{ _request }

// NewGetCurrentTransitionRequest returns a new GetCurrentTransitionRequest.
func NewGetCurrentTransitionRequest() GetCurrentTransitionRequest {
	return GetCurrentTransitionRequest{_request{
		ID_:   getMessageID(),
		Type_: "GetCurrentTransition",
	}}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r GetCurrentTransitionRequest) Send(c Client) (chan GetCurrentTransitionResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan GetCurrentTransitionResponse)
	go func() { future <- (<-generic).(GetCurrentTransitionResponse) }()
	return future, nil
}

// GetCurrentTransitionResponse : Response for GetCurrentTransitionRequest.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#getcurrenttransition
type GetCurrentTransitionResponse struct {
	// Name of the selected transition.
	// Required: Yes.
	Name string `json:"name"`
	// Transition duration (in milliseconds) if supported by the transition.
	// Required: No.
	Duration  int `json:"duration"`
	_response `json:",squash"`
}

// SetCurrentTransitionRequest : Set the active transition.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setcurrenttransition
type SetCurrentTransitionRequest struct {
	// The name of the transition.
	// Required: Yes.
	TransitionName string `json:"transition-name"`
	_request       `json:",squash"`
}

// NewSetCurrentTransitionRequest returns a new SetCurrentTransitionRequest.
func NewSetCurrentTransitionRequest(transitionName string) SetCurrentTransitionRequest {
	return SetCurrentTransitionRequest{
		transitionName,
		_request{
			ID_:   getMessageID(),
			Type_: "SetCurrentTransition",
		},
	}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r SetCurrentTransitionRequest) Send(c Client) (chan SetCurrentTransitionResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan SetCurrentTransitionResponse)
	go func() { future <- (<-generic).(SetCurrentTransitionResponse) }()
	return future, nil
}

// SetCurrentTransitionResponse : Response for SetCurrentTransitionRequest.
// Since obs-websocket version: 0.3.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#setcurrenttransition
type SetCurrentTransitionResponse struct {
	_response `json:",squash"`
}

// SetTransitionDurationRequest : Set the duration of the currently selected transition if supported.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settransitionduration
type SetTransitionDurationRequest struct {
	// Desired duration of the transition (in milliseconds).
	// Required: Yes.
	Duration int `json:"duration"`
	_request `json:",squash"`
}

// NewSetTransitionDurationRequest returns a new SetTransitionDurationRequest.
func NewSetTransitionDurationRequest(duration int) SetTransitionDurationRequest {
	return SetTransitionDurationRequest{
		duration,
		_request{
			ID_:   getMessageID(),
			Type_: "SetTransitionDuration",
		},
	}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r SetTransitionDurationRequest) Send(c Client) (chan SetTransitionDurationResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan SetTransitionDurationResponse)
	go func() { future <- (<-generic).(SetTransitionDurationResponse) }()
	return future, nil
}

// SetTransitionDurationResponse : Response for SetTransitionDurationRequest.
// Since obs-websocket version: 4.0.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#settransitionduration
type SetTransitionDurationResponse struct {
	_response `json:",squash"`
}

// GetTransitionDurationRequest : Get the duration of the currently selected transition if supported.
// Since obs-websocket version: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettransitionduration
type GetTransitionDurationRequest struct{ _request }

// NewGetTransitionDurationRequest returns a new GetTransitionDurationRequest.
func NewGetTransitionDurationRequest() GetTransitionDurationRequest {
	return GetTransitionDurationRequest{_request{
		ID_:   getMessageID(),
		Type_: "GetTransitionDuration",
	}}
}

// Send sends the request and returns a channel to which the response will be sent.
func (r GetTransitionDurationRequest) Send(c Client) (chan GetTransitionDurationResponse, error) {
	generic, err := c.SendRequest(r)
	if err != nil {
		return nil, err
	}
	future := make(chan GetTransitionDurationResponse)
	go func() { future <- (<-generic).(GetTransitionDurationResponse) }()
	return future, nil
}

// GetTransitionDurationResponse : Response for GetTransitionDurationRequest.
// Since obs-websocket version: 4.1.0.
// https://github.com/Palakis/obs-websocket/blob/master/docs/generated/protocol.md#gettransitionduration
type GetTransitionDurationResponse struct {
	// Duration of the current transition (in milliseconds).
	// Required: Yes.
	TransitionDuration int `json:"transition-duration"`
	_response          `json:",squash"`
}
